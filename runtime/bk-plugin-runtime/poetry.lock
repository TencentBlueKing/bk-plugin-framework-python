[[package]]
name = "aiocontextvars"
version = "0.2.2"
description = "Asyncio support for PEP-567 contextvars backport."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
contextvars = {version = "2.4", markers = "python_version < \"3.7\""}

[[package]]
name = "amqp"
version = "2.6.1"
description = "Low-level AMQP client for Python (fork of amqplib)."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
vine = ">=1.1.3,<5.0.0a1"

[[package]]
name = "asgiref"
version = "3.4.1"
description = "ASGI specs, helper code, and adapters"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
tests = ["pytest", "pytest-asyncio", "mypy (>=0.800)"]

[[package]]
name = "backoff"
version = "1.11.1"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "backoff"
version = "2.2.1"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "backports.zoneinfo"
version = "0.2.1"
description = "Backport of the standard library zoneinfo module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-resources = {version = "*", markers = "python_version < \"3.7\""}

[package.extras]
tzdata = ["tzdata"]

[[package]]
name = "billiard"
version = "3.6.4.0"
description = "Python multiprocessing fork with improvements and bugfixes"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "bkoauth"
version = "0.1.0"
description = "blueking oauth"
category = "main"
optional = false
python-versions = "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
django = "*"
requests = "*"

[[package]]
name = "blueapps"
version = "4.5.0"
description = "development framework for blueking"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
bkoauth = ">=0.0.12"
cryptography = ">=2.7,<3.4"
Django = ">=2.2.6,<4.0.0"
django-prometheus = {version = ">=2.1.0,<3.0.0", optional = true, markers = "extra == \"opentelemetry\""}
Mako = ">=1.0.6,<2.0"
MarkupSafe = ">=1.1.1,<2.0.0"
mysqlclient = ">=1.4.4,<=2.0.3"
opentelemetry-api = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-exporter-jaeger = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-exporter-jaeger-proto-grpc = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-exporter-jaeger-thrift = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-exporter-otlp = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-celery = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-dbapi = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-django = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-logging = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-redis = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-instrumentation-requests = {version = ">=0.25b2,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
opentelemetry-sdk = {version = ">=1.6.2,<2.0.0", optional = true, markers = "extra == \"opentelemetry\""}
prometheus-client = {version = ">=0.9.0,<1.0.0", optional = true, markers = "extra == \"opentelemetry\""}
pyCryptodome = ">=3.9.7"
PyJWT = ">=1.6.1,<2.0"
python-json-logger = ">=0.1.7"
requests = ">=2.22.0,<3.0.0"
whitenoise = ">=3.3.0,<=5.2.0"

[package.extras]
opentelemetry = ["opentelemetry-api (>=1.6.2,<2.0.0)", "opentelemetry-sdk (>=1.6.2,<2.0.0)", "opentelemetry-exporter-otlp (>=1.6.2,<2.0.0)", "opentelemetry-exporter-jaeger (>=1.6.2,<2.0.0)", "opentelemetry-exporter-jaeger-proto-grpc (>=1.6.2,<2.0.0)", "opentelemetry-exporter-jaeger-thrift (>=1.6.2,<2.0.0)", "opentelemetry-instrumentation (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-celery (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-django (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-dbapi (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-redis (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-logging (>=0.25b2,<1.0.0)", "opentelemetry-instrumentation-requests (>=0.25b2,<1.0.0)", "prometheus-client (>=0.9.0,<1.0.0)", "django-prometheus (>=2.1.0,<3.0.0)"]

[[package]]
name = "celery"
version = "4.4.7"
description = "Distributed Task Queue."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
billiard = ">=3.6.3.0,<4.0"
kombu = ">=4.6.10,<4.7"
pytz = ">0.0-dev"
vine = "1.3.0"

[package.extras]
arangodb = ["pyArango (>=1.3.2)"]
auth = ["cryptography"]
azureblockblob = ["azure-storage (==0.36.0)", "azure-common (==1.1.5)", "azure-storage-common (==1.1.0)"]
brotli = ["brotli (>=1.0.0)", "brotlipy (>=0.7.0)"]
cassandra = ["cassandra-driver (<3.21.0)"]
consul = ["python-consul"]
cosmosdbsql = ["pydocumentdb (==2.3.2)"]
couchbase = ["couchbase-cffi (<3.0.0)", "couchbase (<3.0.0)"]
couchdb = ["pycouchdb"]
django = ["Django (>=1.11)"]
dynamodb = ["boto3 (>=1.9.178)"]
elasticsearch = ["elasticsearch"]
eventlet = ["eventlet (>=0.24.1)"]
gevent = ["gevent"]
librabbitmq = ["librabbitmq (>=1.5.0)"]
lzma = ["backports.lzma"]
memcache = ["pylibmc"]
mongodb = ["pymongo[srv] (>=3.3.0)"]
msgpack = ["msgpack"]
pymemcache = ["python-memcached"]
pyro = ["pyro4"]
redis = ["redis (>=3.2.0)"]
riak = ["riak (>=2.0)"]
s3 = ["boto3 (>=1.9.125)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
solar = ["ephem"]
sqlalchemy = ["sqlalchemy"]
sqs = ["boto3 (>=1.9.125)", "pycurl (==7.43.0.5)"]
tblib = ["tblib (>=1.3.0)", "tblib (>=1.5.0)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]
zstd = ["zstandard"]

[[package]]
name = "certifi"
version = "2024.2.2"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "contextvars"
version = "2.4"
description = "PEP 567 Backport"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
immutables = ">=0.9"

[[package]]
name = "cryptography"
version = "3.3.2"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cffi = ">=1.12"
six = ">=1.4.1"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["doc8", "pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=3.6.0,!=3.9.0,!=3.9.1,!=3.9.2)", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "dataclasses"
version = "0.8"
description = "A backport of the dataclasses module for Python 3.6"
category = "main"
optional = false
python-versions = ">=3.6, <3.7"

[[package]]
name = "ddtrace"
version = "0.14.1"
description = "Datadog tracing code"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
msgpack-python = "*"
wrapt = "*"

[package.extras]
opentracing = ["opentracing (>=2.0.0)"]

[[package]]
name = "deprecated"
version = "1.2.14"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "pytest", "pytest-cov", "bump2version (<1)", "sphinx (<2)"]

[[package]]
name = "django"
version = "3.2.25"
description = "A high-level Python Web framework that encourages rapid development and clean, pragmatic design."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
asgiref = ">=3.3.2,<4"
pytz = "*"
sqlparse = ">=0.2.2"

[package.extras]
argon2 = ["argon2-cffi (>=19.1.0)"]
bcrypt = ["bcrypt"]

[[package]]
name = "django-celery-beat"
version = "2.2.0"
description = "Database-backed Periodic Tasks."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
celery = ">=4.4,<6.0"
Django = ">=2.2,<4.0"
django-timezone-field = ">=4.1.0,<5.0"
python-crontab = ">=2.3.4"

[[package]]
name = "django-celery-results"
version = "1.2.1"
description = "Celery result backends for Django."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
celery = ">=4.4,<5.0"

[[package]]
name = "django-cors-headers"
version = "3.10.1"
description = "django-cors-headers is a Django application for handling the server headers required for Cross-Origin Resource Sharing (CORS)."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
Django = ">=2.2"

[[package]]
name = "django-dbconn-retry"
version = "0.1.7"
description = "Patch Django to retry a database connection first before failing."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "django-prometheus"
version = "2.3.1"
description = "Django middlewares to monitor your application with Prometheus.io."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
prometheus-client = ">=0.7"

[[package]]
name = "django-timezone-field"
version = "4.2.3"
description = "A Django app providing database and form fields for pytz timezone objects."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
django = ">=2.2"
pytz = "*"

[package.extras]
rest_framework = ["djangorestframework (>=3.0.0)"]

[[package]]
name = "djangorestframework"
version = "3.15.1"
description = "Web APIs for Django, made easy."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
"backports.zoneinfo" = {version = "*", markers = "python_version < \"3.9\""}
django = ">=3.0"

[[package]]
name = "drf-yasg"
version = "1.21.7"
description = "Automated generation of real Swagger/OpenAPI 2.0 schemas from Django Rest Framework code."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
django = ">=2.2.16"
djangorestframework = ">=3.10.3"
inflection = ">=0.3.1"
packaging = ">=21.0"
pytz = ">=2021.1"
pyyaml = ">=5.1"
uritemplate = ">=3.0.0"

[package.extras]
coreapi = ["coreapi (>=2.3.3)", "coreschema (>=0.0.4)"]
validation = ["swagger-spec-validator (>=2.1.0)"]

[[package]]
name = "googleapis-common-protos"
version = "1.56.2"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
protobuf = ">=3.15.0,<4.0.0dev"

[package.extras]
grpc = ["grpcio (>=1.0.0,<2.0.0dev)"]

[[package]]
name = "grpcio"
version = "1.48.2"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
six = ">=1.5.2"

[package.extras]
protobuf = ["grpcio-tools (>=1.48.2)"]

[[package]]
name = "gunicorn"
version = "21.2.0"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
packaging = "*"

[package.extras]
eventlet = ["eventlet (>=0.24.1)"]
gevent = ["gevent (>=1.4.0)"]
setproctitle = ["setproctitle"]
tornado = ["tornado (>=0.2)"]

[[package]]
name = "idna"
version = "3.7"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "immutables"
version = "0.19"
description = "Immutable Collections"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.7.4.3", markers = "python_version < \"3.8\""}

[package.extras]
test = ["flake8 (>=5.0.4,<5.1.0)", "pycodestyle (>=2.9.1,<2.10.0)", "mypy (==0.971)", "pytest (>=6.2.4,<6.3.0)"]

[[package]]
name = "importlib-metadata"
version = "4.8.3"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.4.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-black (>=0.3.7)", "pytest-mypy"]

[[package]]
name = "inflection"
version = "0.5.1"
description = "A port of Ruby on Rails inflector to Python"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "kombu"
version = "4.6.11"
description = "Messaging library for Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
amqp = ">=2.6.0,<2.7"
importlib-metadata = {version = ">=0.18", markers = "python_version < \"3.8\""}

[package.extras]
azureservicebus = ["azure-servicebus (>=0.21.1)"]
azurestoragequeues = ["azure-storage-queue"]
consul = ["python-consul (>=0.6.0)"]
librabbitmq = ["librabbitmq (>=1.5.2)"]
mongodb = ["pymongo (>=3.3.0)"]
msgpack = ["msgpack"]
pyro = ["pyro4"]
qpid = ["qpid-python (>=0.26)", "qpid-tools (>=0.26)"]
redis = ["redis (>=3.3.11)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
sqlalchemy = ["sqlalchemy"]
sqs = ["boto3 (>=1.4.4)", "pycurl (==7.43.0.2)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]

[[package]]
name = "mako"
version = "1.1.6"
description = "A super-fast templating language that borrows the  best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]

[[package]]
name = "markupsafe"
version = "1.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"

[[package]]
name = "msgpack-python"
version = "0.5.6"
description = "MessagePack (de)serializer."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "mysqlclient"
version = "2.0.3"
description = "Python interface to MySQL"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "opentelemetry-api"
version = "1.12.0"
description = "OpenTelemetry Python API"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiocontextvars = {version = "*", markers = "python_version < \"3.7\""}
Deprecated = ">=1.2.6"

[[package]]
name = "opentelemetry-exporter-jaeger"
version = "1.12.0"
description = "Jaeger Exporters for OpenTelemetry"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-exporter-jaeger-proto-grpc = "1.12.0"
opentelemetry-exporter-jaeger-thrift = "1.12.0"

[[package]]
name = "opentelemetry-exporter-jaeger-proto-grpc"
version = "1.12.0"
description = "Jaeger Protobuf Exporter for OpenTelemetry"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
googleapis-common-protos = ">=1.52,<1.56.3"
grpcio = ">=1.0.0,<2.0.0"
opentelemetry-api = ">=1.3,<2.0"
opentelemetry-sdk = ">=1.11,<2.0"

[[package]]
name = "opentelemetry-exporter-jaeger-thrift"
version = "1.12.0"
description = "Jaeger Thrift Exporter for OpenTelemetry"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.3,<2.0"
opentelemetry-sdk = ">=1.11,<2.0"
thrift = ">=0.10.0"

[[package]]
name = "opentelemetry-exporter-otlp"
version = "1.12.0"
description = "OpenTelemetry Collector Exporters"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-exporter-otlp-proto-grpc = "1.12.0"
opentelemetry-exporter-otlp-proto-http = "1.12.0"

[[package]]
name = "opentelemetry-exporter-otlp-proto-grpc"
version = "1.12.0"
description = "OpenTelemetry Collector Protobuf over gRPC Exporter"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
backoff = [
    {version = ">=1.10.0,<2.0.0", markers = "python_version < \"3.7\""},
    {version = ">=1.10.0,<3.0.0", markers = "python_version >= \"3.7\""},
]
googleapis-common-protos = ">=1.52,<2.0"
grpcio = ">=1.0.0,<2.0.0"
opentelemetry-api = ">=1.3,<2.0"
opentelemetry-proto = "1.12.0"
opentelemetry-sdk = ">=1.11,<2.0"

[package.extras]
test = ["pytest-grpc"]

[[package]]
name = "opentelemetry-exporter-otlp-proto-http"
version = "1.12.0"
description = "OpenTelemetry Collector Protobuf over HTTP Exporter"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
backoff = [
    {version = ">=1.10.0,<2.0.0", markers = "python_version < \"3.7\""},
    {version = ">=1.10.0,<3.0.0", markers = "python_version >= \"3.7\""},
]
googleapis-common-protos = ">=1.52,<2.0"
opentelemetry-api = ">=1.3,<2.0"
opentelemetry-proto = "1.12.0"
opentelemetry-sdk = ">=1.11,<2.0"
requests = ">=2.7,<3.0"

[[package]]
name = "opentelemetry-instrumentation"
version = "0.33b0"
description = "Instrumentation Tools & Auto Instrumentation for OpenTelemetry Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.4,<2.0"
wrapt = ">=1.0.0,<2.0.0"

[[package]]
name = "opentelemetry-instrumentation-celery"
version = "0.33b0"
description = "OpenTelemetry Celery Instrumentation"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"

[package.extras]
instruments = ["celery (>=4.0,<6.0)"]
test = ["pytest", "opentelemetry-test-utils (==0.33b0)", "celery (>=4.0,<6.0)"]

[[package]]
name = "opentelemetry-instrumentation-dbapi"
version = "0.33b0"
description = "OpenTelemetry Database API instrumentation"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"
wrapt = ">=1.0.0,<2.0.0"

[package.extras]
test = ["opentelemetry-test-utils (==0.33b0)"]

[[package]]
name = "opentelemetry-instrumentation-django"
version = "0.33b0"
description = "OpenTelemetry Instrumentation for Django"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-instrumentation-wsgi = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"
opentelemetry-util-http = "0.33b0"

[package.extras]
asgi = ["opentelemetry-instrumentation-asgi (==0.33b0)"]
instruments = ["django (>=1.10)"]
test = ["opentelemetry-test-utils (==0.33b0)", "django (>=1.10)"]

[[package]]
name = "opentelemetry-instrumentation-logging"
version = "0.33b0"
description = "OpenTelemetry Logging instrumentation"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"

[package.extras]
test = ["opentelemetry-test-utils (==0.33b0)"]

[[package]]
name = "opentelemetry-instrumentation-redis"
version = "0.33b0"
description = "OpenTelemetry Redis instrumentation"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"
wrapt = ">=1.12.1"

[package.extras]
instruments = ["redis (>=2.6)"]
test = ["opentelemetry-test-utils (==0.33b0)", "opentelemetry-sdk (>=1.3,<2.0)", "redis (>=2.6)"]

[[package]]
name = "opentelemetry-instrumentation-requests"
version = "0.33b0"
description = "OpenTelemetry requests instrumentation"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"
opentelemetry-util-http = "0.33b0"

[package.extras]
instruments = ["requests (>=2.0,<3.0)"]
test = ["opentelemetry-test-utils (==0.33b0)", "httpretty (>=1.0,<2.0)", "requests (>=2.0,<3.0)"]

[[package]]
name = "opentelemetry-instrumentation-wsgi"
version = "0.33b0"
description = "WSGI Middleware for OpenTelemetry"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
opentelemetry-api = ">=1.12,<2.0"
opentelemetry-instrumentation = "0.33b0"
opentelemetry-semantic-conventions = "0.33b0"
opentelemetry-util-http = "0.33b0"

[package.extras]
test = ["opentelemetry-test-utils (==0.33b0)"]

[[package]]
name = "opentelemetry-proto"
version = "1.12.0"
description = "OpenTelemetry Python Proto"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
protobuf = ">=3.13,<4.0"

[[package]]
name = "opentelemetry-sdk"
version = "1.12.0"
description = "OpenTelemetry Python SDK"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
dataclasses = {version = "0.8", markers = "python_version < \"3.7\""}
opentelemetry-api = "1.12.0"
opentelemetry-semantic-conventions = "0.33b0"
typing-extensions = ">=3.7.4"

[[package]]
name = "opentelemetry-semantic-conventions"
version = "0.33b0"
description = "OpenTelemetry Semantic Conventions"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "opentelemetry-util-http"
version = "0.33b0"
description = "Web util for OpenTelemetry"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "prometheus-client"
version = "0.17.1"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "protobuf"
version = "3.19.4"
description = "Protocol Buffers"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycryptodome"
version = "3.20.0"
description = "Cryptographic library for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyjwt"
version = "1.7.1"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
crypto = ["cryptography (>=1.4)"]
flake8 = ["flake8", "flake8-import-order", "pep8-naming"]
test = ["pytest (>=4.0.1,<5.0.0)", "pytest-cov (>=2.6.0,<3.0.0)", "pytest-runner (>=4.2,<5.0.0)"]

[[package]]
name = "pyparsing"
version = "3.0.7"
description = "Python parsing module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "python-crontab"
version = "3.0.0"
description = "Python Crontab API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = "*"

[package.extras]
cron-description = ["cron-descriptor"]
cron-schedule = ["croniter"]

[[package]]
name = "python-dateutil"
version = "2.9.0.post0"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-json-logger"
version = "2.0.7"
description = "A python library adding a json log formatter"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pytz"
version = "2024.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "raven"
version = "6.10.0"
description = "Raven is a client for Sentry (https://getsentry.com)"
category = "main"
optional = false
python-versions = "*"

[package.extras]
flask = ["Flask (>=0.8)", "blinker (>=1.1)"]
tests = ["bottle", "celery (>=2.5)", "coverage (<4)", "exam (>=0.5.2)", "flake8 (==3.5.0)", "logbook", "mock", "nose", "pytz", "pytest (>=3.2.0,<3.3.0)", "pytest-timeout (==1.2.1)", "pytest-xdist (==1.18.2)", "pytest-pythonpath (==0.7.2)", "pytest-cov (==2.5.1)", "pytest-flake8 (==1.0.0)", "requests", "tornado (>=4.1,<5.0)", "tox", "webob", "webtest", "wheel", "anyjson", "zconfig", "Flask (>=0.8)", "blinker (>=1.1)", "Flask-Login (>=0.2.0)", "blinker (>=1.1)", "sanic (>=0.7.0)", "aiohttp"]

[[package]]
name = "redis"
version = "3.5.3"
description = "Python client for Redis key-value store"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
hiredis = ["hiredis (>=0.1.3)"]

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sqlparse"
version = "0.4.4"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["flake8", "build"]
doc = ["sphinx"]
test = ["pytest", "pytest-cov"]

[[package]]
name = "thrift"
version = "0.20.0"
description = "Python bindings for the Apache Thrift RPC system"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.7.2"

[package.extras]
all = ["tornado (>=4.0)", "twisted"]
tornado = ["tornado (>=4.0)"]
twisted = ["twisted"]

[[package]]
name = "typing-extensions"
version = "4.1.1"
description = "Backported and Experimental Type Hints for Python 3.6+"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "uritemplate"
version = "4.1.1"
description = "Implementation of RFC 6570 URI Templates"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "1.26.18"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (==1.0.9)", "brotlipy (>=0.6.0)", "brotli (>=1.0.9)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "vine"
version = "1.3.0"
description = "Promises, promises, promises."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "whitenoise"
version = "5.2.0"
description = "Radically simplified static file serving for WSGI applications"
category = "main"
optional = false
python-versions = ">=3.5, <4"

[package.extras]
brotli = ["brotli"]

[[package]]
name = "wrapt"
version = "1.16.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "zipp"
version = "3.6.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = "^3.6.1,<4.0"
content-hash = "db978e1f7ae2350ba3445f11d4b9bf8d4c45b4f49e9cad7d1a0fbed1888db878"

[metadata.files]
aiocontextvars = []
amqp = []
asgiref = [
    {file = "asgiref-3.4.1-py3-none-any.whl", hash = "sha256:ffc141aa908e6f175673e7b1b3b7af4fdb0ecb738fc5c8b88f69f055c2415214"},
    {file = "asgiref-3.4.1.tar.gz", hash = "sha256:4ef1ab46b484e3c706329cedeff284a5d40824200638503f5768edb6de7d58e9"},
]
backoff = []
"backports.zoneinfo" = []
billiard = []
bkoauth = []
blueapps = []
celery = []
certifi = []
cffi = []
charset-normalizer = []
contextvars = []
cryptography = []
dataclasses = []
ddtrace = []
deprecated = []
django = [
    {file = "Django-3.2.25-py3-none-any.whl", hash = "sha256:a52ea7fcf280b16f7b739cec38fa6d3f8953a5456986944c3ca97e79882b4e38"},
    {file = "Django-3.2.25.tar.gz", hash = "sha256:7ca38a78654aee72378594d63e51636c04b8e28574f5505dff630895b5472777"},
]
django-celery-beat = []
django-celery-results = []
django-cors-headers = []
django-dbconn-retry = []
django-prometheus = []
django-timezone-field = []
djangorestframework = []
drf-yasg = []
googleapis-common-protos = []
grpcio = []
gunicorn = []
idna = []
immutables = []
importlib-metadata = []
importlib-resources = []
inflection = []
kombu = []
mako = []
markupsafe = []
msgpack-python = []
mysqlclient = []
opentelemetry-api = []
opentelemetry-exporter-jaeger = []
opentelemetry-exporter-jaeger-proto-grpc = []
opentelemetry-exporter-jaeger-thrift = []
opentelemetry-exporter-otlp = []
opentelemetry-exporter-otlp-proto-grpc = []
opentelemetry-exporter-otlp-proto-http = []
opentelemetry-instrumentation = []
opentelemetry-instrumentation-celery = []
opentelemetry-instrumentation-dbapi = []
opentelemetry-instrumentation-django = []
opentelemetry-instrumentation-logging = []
opentelemetry-instrumentation-redis = []
opentelemetry-instrumentation-requests = []
opentelemetry-instrumentation-wsgi = []
opentelemetry-proto = []
opentelemetry-sdk = []
opentelemetry-semantic-conventions = []
opentelemetry-util-http = []
packaging = []
prometheus-client = []
protobuf = []
pycparser = []
pycryptodome = []
pyjwt = []
pyparsing = []
python-crontab = []
python-dateutil = []
python-json-logger = []
pytz = []
pyyaml = []
raven = []
redis = []
requests = []
six = []
sqlparse = []
thrift = []
typing-extensions = []
uritemplate = []
urllib3 = []
vine = []
whitenoise = []
wrapt = []
zipp = []
